---
- hosts: www
  gather_facts: False

  vars:
    - root_dir: "{{ playbook_dir }}"
    - shared_dir: "{{ playbook_dir }}/../shared"
    - status_domain: somedomain2.voronenko.net
    - acme_known_challenge_dir:  "/var/www/html/.well-known/acme-challenge/"


  pre_tasks:
    - debug: msg="Pre tasks section"

    - name: ANSIBLE PYTHON | install python 2
      raw: test -e /usr/bin/python || (apt -qqy update && apt install -qy python-minimal)
      become: yes

    - name:  UNPRIVILEGED USERS | Get acl dependency (ansible unprivileged user operations magic)
      apt: pkg="acl"
      become: yes

    - name: gather facts
      setup:

#    - name: Include common pretasks
#      include_tasks: "{{shared_dir}}/common_pretasks.yml"
#      tags: always


  roles:
     - {
         role: "sa-statping"
       }
     - {
        role: "sa-acme-sh",
        le_groups: ["www-data"]
       }
     - {
        role: "sa-nginx",
        nginx_groups: ["www-data"]
       }

  tasks:

    - debug: msg="Tasks section"

    - name: Create acme web challenges dir
      file: path="{{ acme_known_challenge_dir }}" state="directory" owner="le" group="www-data" mode="u=rwx,g=rwx,o=rx"
      become: yes

    - name: Template http endpoint
      template: src="templates/plain_nginx.conf.j2" dest="/etc/nginx/sites-enabled/{{ status_domain }}.conf"
      become: yes

    - name: Restart nginx
      service: name="nginx" state="restarted"
      become: yes

    - name: Generate certificates
      command: acme.sh --issue -d {{ status_domain }} -w /var/www/html
      args:
        creates: "/opt/letsencrypt/certs/{{ status_domain }}/fullchain.cer"
      become: yes
      become_user: le

    - name: Configure nginx for ssl
      template: src="templates/nginx.conf.j2" dest="/etc/nginx/sites-enabled/{{ status_domain }}_https.conf"
      become: yes

    - name: Restart nginx
      service: name="nginx" state="restarted"
      become: yes

