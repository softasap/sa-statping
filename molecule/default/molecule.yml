---
dependency:
  name: galaxy
#  requirements_file: tests/requirements.yml

scenario:
  name: default

lint:
  enabled: false  

molecule:
  raw_ssh_args:
    - -o StrictHostKeyChecking=false
    - -o UserKnownHostsFile=/dev/null

driver:
  name: vagrant
  provider:
    name: virtualbox

ansible:
  lint:
    name: ansible-lint
  # group_vars:
  #   some-hosts:
  #     # This should allow docker-in-docker to work
  #     docker_storage_driver: vfs

  # host_vars:
  #   someinstance:
  #     docker_use_ipv4_nic_mtu: True
  #     # Latest version 17.12.1.ce-1.el7.centos has a bug that prevents
  #     # testing on travis: https://github.com/docker/for-linux/issues/219
  #     docker_version: 17.09.1.ce-1.el7.centos
  #   someinstance-inactive:
  #     docker_systemd_setup: False

  # config_file: /path/to/your/ansible.cfg
  # playbook: /path/to/some/other_playbook.yml
  # host_key_checking: False
  # raw_ssh_args:
  #   - -o UserKnownHostsFile=/dev/null
  #   - -o IdentitiesOnly=yes
  #   - -o ControlMaster=auto
  #   - -o ControlPersist=60s
  # raw_env_vars:
  #   ANSIBLE_ACTION_PLUGINS: ../plugins
  # ansiblecfg_defaults:
  #   retry_files_enabled: False
  # ansiblecfg_ssh_connection:
  #   pipelining: True  
  
vagrant:
  platforms:
  # - name: trusty
  #   box: ubuntu/trusty64
  #   # interfaces:
  #   #   - network_name: public_network
  #   #     type: dhcp
  #   #     auto_config: true    
  # - name: xenial
  #   box: ubuntu/xenial64
   - name: bionic
     box: ubuntu/bionic64
    # interfaces:
    #   - network_name: public_network
    #     type: dhcp
    #     auto_config: true
    # provider_raw_config_args:
    # - "customize [ 'modifyvm', :id, '--uartmode1', 'disconnected' ]"    
  # - name: centos6
  #   box: centos/6    
  #- name: centos7
  #  box: centos/7
  # - name: fedora28
  #   box: generic/fedora28
  # - name: alpine
  #   box: generic/alpine28
  providers:
    - name: virtualbox
      type: virtualbox
      options:
        memory: 1024
        cpus: 2
  instances:
    - name: someinstance
    - name: someinstance2

# docker:
#   containers:
#   - name: someinstance
#     image: softasap/someimage
#     image_version: latest
#     privileged: True
#     ansible_groups:
#     - some-hosts
#   - name: someinstance-inactive
#     image: softasap/someimage
#     image_version: 7
#     ansible_groups:
#     - some-hosts

verifier:
  name: testinfra
  env:
    PYTHONWARNINGS: "ignore:.*U.*mode is deprecated:DeprecationWarning"  
  lint:
    name: flake8  